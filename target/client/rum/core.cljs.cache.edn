;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name rum.core, :imports nil, :requires {cljsjs.react cljsjs.react, sablono.core sablono.core}, :uses nil, :defs {reactive-key {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 208, :column 8, :end-line 208, :end-column 20, :private true, :arglists (quote ([state]))}, :private true, :name rum.core/reactive-key, :variadic false, :file "target/client/rum/core.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, mount {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 144, :column 7, :end-line 144, :end-column 12, :arglists (quote ([component node]))}, :name rum.core/mount, :variadic false, :file "target/client/rum/core.cljs", :end-column 12, :method-params ([component node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component node]))}, render->mixin {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 149, :column 7, :end-line 149, :end-column 20, :arglists (quote ([render-fn]))}, :name rum.core/render->mixin, :variadic false, :file "target/client/rum/core.cljs", :end-column 20, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, compare-by {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 125, :column 7, :end-line 125, :end-column 17, :arglists (quote ([keyfn]))}, :name rum.core/compare-by, :variadic false, :file "target/client/rum/core.cljs", :end-column 17, :method-params ([keyfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keyfn]))}, call-all {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 22, :column 8, :end-line 22, :end-column 16, :private true, :arglists (quote ([state fns & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}}, :private true, :name rum.core/call-all, :variadic true, :file "target/client/rum/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}, :method-params [(state fns args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists ([state fns & args])}, cursored {:name rum.core/cursored, :file "target/client/rum/core.cljs", :line 316, :column 1, :end-line 316, :end-column 14, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 316, :column 6, :end-line 316, :end-column 14}}, local {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 185, :column 7, :end-line 185, :end-column 12, :arglists (quote ([initial & [key]])), :doc "Adds an atom to component’s state that can be used as local state.\n   Atom is stored under key `:rum/local`.\n   Component will be automatically re-rendered if atom’s value changes", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(initial [key])], :arglists ([initial & [key]]), :arglists-meta (nil)}}, :name rum.core/local, :variadic true, :file "target/client/rum/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(initial [key])], :arglists ([initial & [key]]), :arglists-meta (nil)}, :method-params [(initial [key])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists ([initial & [key]]), :doc "Adds an atom to component’s state that can be used as local state.\n   Atom is stored under key `:rum/local`.\n   Component will be automatically re-rendered if atom’s value changes"}, reactive {:name rum.core/reactive, :file "target/client/rum/core.cljs", :line 211, :column 1, :end-line 211, :end-column 14, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 211, :column 6, :end-line 211, :end-column 14}}, args->state {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 158, :column 7, :end-line 158, :end-column 18, :arglists (quote ([args]))}, :name rum.core/args->state, :variadic false, :file "target/client/rum/core.cljs", :end-column 18, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args]))}, cursored-key {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 330, :column 8, :end-line 330, :end-column 20, :private true, :arglists (quote ([state]))}, :private true, :name rum.core/cursored-key, :variadic false, :file "target/client/rum/core.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, react {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 241, :column 7, :end-line 241, :end-column 12, :arglists (quote ([ref]))}, :name rum.core/react, :variadic false, :file "target/client/rum/core.cljs", :end-column 12, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, schedule {:name rum.core/schedule, :file "target/client/rum/core.cljs", :line 117, :column 1, :end-line 117, :end-column 14, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 117, :column 6, :end-line 117, :end-column 14}}, request-render {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 139, :column 7, :end-line 139, :end-column 21, :arglists (quote ([component]))}, :name rum.core/request-render, :variadic false, :file "target/client/rum/core.cljs", :end-column 21, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, render-queue {:name rum.core/render-queue, :file "target/client/rum/core.cljs", :line 130, :column 1, :end-line 130, :end-column 18, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 130, :column 6, :end-line 130, :end-column 18}}, deref-args {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 312, :column 8, :end-line 312, :end-column 18, :private true, :arglists (quote ([xs]))}, :private true, :name rum.core/deref-args, :variadic false, :file "target/client/rum/core.cljs", :end-column 18, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, element {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 161, :column 7, :end-line 161, :end-column 14, :arglists (quote ([class state & [props]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(class state [props])], :arglists ([class state & [props]]), :arglists-meta (nil)}}, :name rum.core/element, :variadic true, :file "target/client/rum/core.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(class state [props])], :arglists ([class state & [props]]), :arglists-meta (nil)}, :method-params [(class state [props])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists ([class state & [props]])}, with-key {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 169, :column 7, :end-line 169, :end-column 15, :arglists (quote ([element key]))}, :name rum.core/with-key, :variadic false, :file "target/client/rum/core.cljs", :end-column 15, :method-params ([element key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element key]))}, next-id {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 8, :column 9, :end-line 8, :end-column 16, :arglists (quote ([]))}, :name rum.core/next-id, :variadic false, :file "target/client/rum/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *reactions* {:name rum.core/*reactions*, :file "target/client/rum/core.cljs", :line 206, :column 1, :end-line 206, :end-column 27, :dynamic true, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 206, :column 16, :end-line 206, :end-column 27, :dynamic true}}, render-state->mixin {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 152, :column 7, :end-line 152, :end-column 26, :arglists (quote ([render-fn]))}, :name rum.core/render-state->mixin, :variadic false, :file "target/client/rum/core.cljs", :end-column 26, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, cursored-watch {:name rum.core/cursored-watch, :file "target/client/rum/core.cljs", :line 333, :column 1, :end-line 333, :end-column 20, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 333, :column 6, :end-line 333, :end-column 20}}, static {:name rum.core/static, :file "target/client/rum/core.cljs", :line 177, :column 1, :end-line 177, :end-column 12, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 177, :column 6, :end-line 177, :end-column 12}}, render-comp->mixin {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 155, :column 7, :end-line 155, :end-column 25, :arglists (quote ([render-fn]))}, :name rum.core/render-comp->mixin, :variadic false, :file "target/client/rum/core.cljs", :end-column 25, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, cursor {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 300, :column 7, :end-line 300, :end-column 13, :arglists (quote ([ref path]))}, :name rum.core/cursor, :variadic false, :file "target/client/rum/core.cljs", :end-column 13, :method-params ([ref path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref path]))}, state {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 11, :column 7, :end-line 11, :end-column 12, :arglists (quote ([comp]))}, :name rum.core/state, :variadic false, :file "target/client/rum/core.cljs", :end-column 12, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp]))}, with-ref {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 172, :column 7, :end-line 172, :end-column 15, :arglists (quote ([element ref]))}, :name rum.core/with-ref, :variadic false, :file "target/client/rum/core.cljs", :end-column 15, :method-params ([element ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element ref]))}, render {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 132, :column 7, :end-line 132, :end-column 13, :arglists (quote ([]))}, :name rum.core/render, :variadic false, :file "target/client/rum/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, empty-queue {:name rum.core/empty-queue, :file "target/client/rum/core.cljs", :line 129, :column 1, :end-line 129, :end-column 17, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 129, :column 6, :end-line 129, :end-column 17}}, collect {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 17, :column 8, :end-line 17, :end-column 15, :private true, :arglists (quote ([fn-key classes]))}, :private true, :name rum.core/collect, :variadic false, :file "target/client/rum/core.cljs", :end-column 15, :method-params ([fn-key classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn-key classes]))}, ->LensCursor {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 247, :column 10, :end-line 247, :end-column 20, :protocols #{rum.core/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([parent getter setter]))}, :protocols #{rum.core/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name rum.core/->LensCursor, :variadic false, :file "target/client/rum/core.cljs", :end-column 20, :method-params ([parent getter setter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 247, :end-line 247, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parent getter setter])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, ctor->class {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 166, :column 7, :end-line 166, :end-column 18, :arglists (quote ([ctor]))}, :name rum.core/ctor->class, :variadic false, :file "target/client/rum/core.cljs", :end-column 18, :method-params ([ctor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctor]))}, id {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 14, :column 7, :end-line 14, :end-column 9, :arglists (quote ([comp]))}, :name rum.core/id, :variadic false, :file "target/client/rum/core.cljs", :end-column 9, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp]))}, build-class {:protocol-inline nil, :meta {:file "/home/xuelin/dev/first/cltable/target/client/rum/core.cljs", :line 29, :column 7, :end-line 29, :end-column 18, :arglists (quote ([classes display-name]))}, :name rum.core/build-class, :variadic false, :file "target/client/rum/core.cljs", :end-column 18, :method-params ([classes display-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([classes display-name]))}, LensCursor {:num-fields 3, :protocols #{rum.core/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name rum.core/LensCursor, :file "target/client/rum/core.cljs", :end-column 20, :type true, :column 10, :line 247, :record false, :end-line 247, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}}, :require-macros {rum.core rum.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:rum/react-component :did-mount :will-unmount :componentDidUpdate classes :rum/om-args :rum/class :init sequential? :displayName :child-context :rum/refs :rum/args :rum/id parent :componentWillUnmount :componentWillReceiveProps :shouldComponentUpdate :did-update :will-mount :render :getChildContext :componentWillUpdate :getInitialState setter :will-update :class-properties :rum/local :componentDidMount :wrap-render :componentWillMount :should-update getter :transfer-state}, :order [:rum/id sequential? classes :init :will-mount :did-mount :transfer-state :should-update :will-update :render :wrap-render :did-update :will-unmount :child-context :class-properties :componentDidUpdate :displayName :componentWillUnmount :componentWillReceiveProps :shouldComponentUpdate :getChildContext :componentWillUpdate :getInitialState :componentDidMount :componentWillMount :rum/react-component :rum/args :rum/class :rum/local :rum/refs parent getter setter :rum/om-args]}, :doc nil}